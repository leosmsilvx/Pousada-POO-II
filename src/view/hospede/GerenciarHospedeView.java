/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package view.hospede;

import controller.HospedeController;
import controller.QuartoController;
import enums.CargoFuncionario;
import enums.CategoriaQuarto;
import java.util.Arrays;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Hospede;
import model.Quarto;

/**
 *
 * @author leoms
 */
public class GerenciarHospedeView extends javax.swing.JInternalFrame {

    
    private Integer linha = -1;
    
    public GerenciarHospedeView() {
        initComponents();
        Inicializar();
        preencherTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbExcluir = new javax.swing.JButton();
        jbEditar = new javax.swing.JButton();
        jlIdFuncionario = new javax.swing.JLabel();
        jtxIdHospede = new javax.swing.JTextField();
        jtxCpf = new javax.swing.JFormattedTextField();
        jlCpf = new javax.swing.JLabel();
        jlNome = new javax.swing.JLabel();
        jtxNome = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtHospede = new javax.swing.JTable();

        jbExcluir.setText("Excluir");
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jbEditar.setText("Editar");
        jbEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEditarActionPerformed(evt);
            }
        });

        jlIdFuncionario.setText("ID:");

        try {
            jtxCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jtxCpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxCpfActionPerformed(evt);
            }
        });

        jlCpf.setText("CPF:");

        jlNome.setText("Nome:");

        jtxNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxNomeActionPerformed(evt);
            }
        });

        jtHospede.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "CPF"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtHospede.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtHospedeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtHospede);
        if (jtHospede.getColumnModel().getColumnCount() > 0) {
            jtHospede.getColumnModel().getColumn(0).setResizable(false);
            jtHospede.getColumnModel().getColumn(1).setResizable(false);
            jtHospede.getColumnModel().getColumn(2).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addComponent(jbEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(160, 160, 160)
                .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(151, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jlCpf)
                    .addComponent(jlNome)
                    .addComponent(jlIdFuncionario))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtxIdHospede, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxNome, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(19, 19, 19)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(19, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlIdFuncionario)
                    .addComponent(jtxIdHospede, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlNome)
                    .addComponent(jtxNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlCpf)
                    .addComponent(jtxCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 253, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(143, 143, 143)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(56, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void Inicializar(){
        jtxIdHospede.setEditable(false);
        jtxNome.setEditable(false);
        jtxCpf.setEditable(false);
    }
    
    private void preencherTabela(){
        HospedeController controller = new HospedeController();
        List<Hospede> lista = controller.findAll();
        if (lista.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nenhum hospede Cadastrado", "Retorno Tela", JOptionPane.ERROR_MESSAGE);
        }
        else {
            DefaultTableModel modeloTabela = (DefaultTableModel) jtHospede.getModel();
            modeloTabela.setRowCount(0);
            for (Hospede h: lista) {
                modeloTabela.addRow(new Object[]{
                    h.getIdHospede(),
                    h.getNome(),
                    h.getCpf()});
            }
        }
    }
    
    private void limparCampos(){
        jtxIdHospede.setText("");
        jtxNome.setText("");
        jtxCpf.setText("");
    }

    
    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        Integer id = Integer.valueOf(jtxIdHospede.getText());
        HospedeController controller = new HospedeController();
        controller.delete(id);
        JOptionPane.showMessageDialog(this, "Hospede exclu√≠do com Sucesso!");
        limparCampos();
        preencherTabela();
    }//GEN-LAST:event_jbExcluirActionPerformed

    private void jbEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEditarActionPerformed
        String nome = jtxNome.getText();
        String cpf = jtxCpf.getText().replace("-", "").replace(".", "");
        Integer id = Integer.valueOf(jtxIdHospede.getText());
        if ((nome.isEmpty()) || (cpf.isEmpty())) {
            DefaultTableModel modeloTabela = (DefaultTableModel) jtHospede.getModel();
            modeloTabela.setRowCount(0);
            JOptionPane.showMessageDialog(this, "Digite todos os campos", "Retorno Tela", JOptionPane.ERROR_MESSAGE);
        }
        else {
            Hospede hospede = new Hospede();
            hospede.setNome(nome);
            hospede.setCpf(cpf);
            hospede.setIdHospede(id);
            HospedeController controller = new HospedeController();
            controller.edit(hospede);
            JOptionPane.showMessageDialog(this, "Hospede editado com Sucesso!");
            limparCampos();
            preencherTabela();
        }
    }//GEN-LAST:event_jbEditarActionPerformed

    private void jtxCpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxCpfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxCpfActionPerformed

    private void jtxNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxNomeActionPerformed

    private void jtHospedeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtHospedeMouseClicked
        linha  = jtHospede.getSelectedRow();
        if (linha != -1) {
            jtxIdHospede.setText(jtHospede.getValueAt(linha, 0).toString());
            jtxNome.setText(jtHospede.getValueAt(linha, 1).toString());
            jtxCpf.setText(jtHospede.getValueAt(linha, 2).toString());
            jtxNome.setEditable(true);
            jtxCpf.setEditable(true);
            linha = -1;
        }
    }//GEN-LAST:event_jtHospedeMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbEditar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JLabel jlCpf;
    private javax.swing.JLabel jlIdFuncionario;
    private javax.swing.JLabel jlNome;
    private javax.swing.JTable jtHospede;
    private javax.swing.JFormattedTextField jtxCpf;
    private javax.swing.JTextField jtxIdHospede;
    private javax.swing.JTextField jtxNome;
    // End of variables declaration//GEN-END:variables
}
