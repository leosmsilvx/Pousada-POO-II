/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package view.estadia;

import controller.EstadiaController;
import controller.HospedeController;
import controller.QuartoController;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Estadia;
import model.Hospede;
import model.Quarto;

/**
 *
 * @author leoms
 */
public class CadastrarEstadiaView extends javax.swing.JInternalFrame {

    /**
     * Creates new form CadastrarFuncionarioView
     */
    public CadastrarEstadiaView() {
        initComponents();
        preencherComboQuartos();
        preencherComboHospedes();
        preencherTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlCargo = new javax.swing.JLabel();
        jcbQuartos = new javax.swing.JComboBox<Quarto>();
        jbSalvar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtEstadias = new javax.swing.JTable();
        jlCargo1 = new javax.swing.JLabel();
        jcbHospedes = new javax.swing.JComboBox<Hospede>();
        jtxDataCheckin = new javax.swing.JFormattedTextField();
        jlCpf = new javax.swing.JLabel();
        jtxDataCheckout = new javax.swing.JFormattedTextField();
        jlCpf1 = new javax.swing.JLabel();

        jlCargo.setText("Quarto:");

        jcbQuartos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbQuartosActionPerformed(evt);
            }
        });

        jbSalvar.setText("Salvar");
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        jtEstadias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Checkin", "Checkout (esperado)", "Quarto", "Hospede"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtEstadias);
        if (jtEstadias.getColumnModel().getColumnCount() > 0) {
            jtEstadias.getColumnModel().getColumn(0).setResizable(false);
            jtEstadias.getColumnModel().getColumn(1).setResizable(false);
            jtEstadias.getColumnModel().getColumn(2).setResizable(false);
            jtEstadias.getColumnModel().getColumn(3).setResizable(false);
        }

        jlCargo1.setText("HÃ³spede");

        jcbHospedes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbHospedesActionPerformed(evt);
            }
        });

        jtxDataCheckin.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/y HH:mm:ss"))));
        jtxDataCheckin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxDataCheckinActionPerformed(evt);
            }
        });

        jlCpf.setText("Checkin:");

        jtxDataCheckout.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/y HH:mm:ss"))));
        jtxDataCheckout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxDataCheckoutActionPerformed(evt);
            }
        });

        jlCpf1.setText("Checkout:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(231, 231, 231)
                        .addComponent(jbSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jlCargo)
                                        .addGap(18, 18, 18)
                                        .addComponent(jcbQuartos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jlCpf)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jtxDataCheckin, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jlCpf1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jtxDataCheckout, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(33, 33, 33)
                                        .addComponent(jlCargo1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jcbHospedes, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addComponent(jScrollPane1))
                        .addGap(35, 35, 35))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlCpf)
                    .addComponent(jtxDataCheckin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jlCpf1)
                        .addComponent(jtxDataCheckout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlCargo)
                    .addComponent(jcbQuartos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlCargo1)
                    .addComponent(jcbHospedes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void preencherTabela(){
        EstadiaController controller = new EstadiaController();
        List<Estadia> lista = controller.findAll();
        if (lista.isEmpty()) {
            DefaultTableModel modeloTabela = (DefaultTableModel) jtEstadias.getModel();
            modeloTabela.setRowCount(0);
            JOptionPane.showMessageDialog(this, "Nenhuma Estadia Cadastrado", "Retorno Tela", JOptionPane.ERROR_MESSAGE);
        }
        else {
            DefaultTableModel modeloTabela = (DefaultTableModel) jtEstadias.getModel();
            modeloTabela.setRowCount(0);
            SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");            
            for (Estadia e: lista) {
                modeloTabela.addRow(new Object[]{ 
                    format.format(e.getDtCheckin()),
                    format.format(e.getDtCheckoutEsperado()),
                    e.getQuarto(),
                    e.getHospede()});
            }
        }
    }
    
    private void limparCampos(){
        jtxDataCheckout.setText("");
        jtxDataCheckin.setText("");
        jcbQuartos.setSelectedIndex(0);
        jcbHospedes.setSelectedIndex(0);
    }
    
    private void preencherComboQuartos(){
        QuartoController controller = new QuartoController();
        List<Quarto> lista = controller.findAll();
        for(Quarto q: lista)
            jcbQuartos.addItem(q);
    }
    
    private void preencherComboHospedes(){
        HospedeController controller = new HospedeController();
        List<Hospede> lista = controller.findAll();
        for (Hospede h: lista)
            jcbHospedes.addItem(h);
    }
    
    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed
        String strDataCheckin = jtxDataCheckin.getText();
        String strDataCheckout = jtxDataCheckout.getText();               
        Quarto quarto = (Quarto) jcbQuartos.getSelectedItem();
        Hospede hospede = (Hospede) jcbHospedes.getSelectedItem();
        if ((strDataCheckin.isEmpty()) || (strDataCheckout.isEmpty()) || (quarto == null) || hospede == null) {
            JOptionPane.showMessageDialog(this, "Digite todos os campos", "Retorno Tela", JOptionPane.ERROR_MESSAGE);
        }
        else {
            try {
                EstadiaController controller = new EstadiaController();
                Estadia estadia = new Estadia();
                SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
                estadia.setDtCheckin(format.parse(strDataCheckin));
                estadia.setDtCheckoutEsperado(format.parse(strDataCheckout));
                estadia.setHospede(hospede);
                estadia.setQuarto(quarto);
                controller.insert(estadia);
                limparCampos();
                preencherTabela();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
            JOptionPane.showMessageDialog(this, "ServiÃ§o Inserido com Sucesso!");
            limparCampos();
            preencherTabela();
        }
    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jcbQuartosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbQuartosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbQuartosActionPerformed

    private void jcbHospedesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbHospedesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbHospedesActionPerformed

    private void jtxDataCheckinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxDataCheckinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxDataCheckinActionPerformed

    private void jtxDataCheckoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxDataCheckoutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxDataCheckoutActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JComboBox<Hospede> jcbHospedes;
    private javax.swing.JComboBox<Quarto> jcbQuartos;
    private javax.swing.JLabel jlCargo;
    private javax.swing.JLabel jlCargo1;
    private javax.swing.JLabel jlCpf;
    private javax.swing.JLabel jlCpf1;
    private javax.swing.JTable jtEstadias;
    private javax.swing.JFormattedTextField jtxDataCheckin;
    private javax.swing.JFormattedTextField jtxDataCheckout;
    // End of variables declaration//GEN-END:variables
}
